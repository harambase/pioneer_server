<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.harambase.pioneer.dao.mapper.AdviseMapper" >
  <resultMap id="BaseResultMap" type="com.harambase.pioneer.pojo.base.Advise" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentid" property="studentid" jdbcType="VARCHAR" />
    <result column="facultyid" property="facultyid" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentid, facultyid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Advise where id = #{arg0, jdbcType=INTEGER}
  </select>

  <select id="selectByAdvise" resultMap="BaseResultMap" parameterType="com.harambase.pioneer.pojo.base.Advise" >
    select
    <include refid="Base_Column_List" />
    from Advise where studentid = #{studentid,jdbcType=VARCHAR} and facultyid = #{facultyid,jdbcType=VARCHAR}
  </select>

  <select id="selectFacultyByStudent" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from Advise where studentid = #{arg0,jdbcType=VARCHAR}
  </select>

  <select id="getAllAdvise" resultMap="BaseResultMap">
    select * from Advise 
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Advise where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByUserID" parameterType="java.lang.String" >
    delete from Advise where studentid = #{studentid,jdbcType=INTEGER} or facultyid = #{studentid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.harambase.pioneer.pojo.base.Advise" >
    insert into Advise (id, studentid, facultyid, status, updateTime, operator
      )
    values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=VARCHAR}, #{facultyid,jdbcType=VARCHAR},
    #{status,jdbcType=VARCHAR},
    #{updateTime,jdbcType=VARCHAR},
    #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.harambase.pioneer.pojo.base.Advise" >
    insert into Advise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="facultyid != null" >
        facultyid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="operator != null" >
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="facultyid != null" >
        #{facultyid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.harambase.pioneer.pojo.base.Advise" >
    update Advise
    <set >
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="facultyid != null" >
        facultyid = #{facultyid,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.harambase.pioneer.pojo.base.Advise" >
    update Advise
    set studentid = #{studentid,jdbcType=VARCHAR},
        facultyid = #{facultyid,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        updateTime = #{updateTime,jdbcType=VARCHAR},
        operator = #{operator,jdbcType=VARCHAR},
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAdvisingCountByMapPageSearchOrdered" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) as count from AdviseView <where> 1 = 1
    <if test="studentid != null">
      and studentid = #{studentid,jdbcType=VARCHAR}
    </if>
    <if test="facultyid != null">
      and facultyid = #{facultyid,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and (studentid like '%' #{search,jdbcType=VARCHAR} '%' or
      facultyid like '%' #{search,jdbcType=VARCHAR} '%' or
      sname like  '%' #{search,jdbcType=VARCHAR} '%' or
      operator like  '%' #{search,jdbcType=VARCHAR} '%' or
      fname like  '%' #{search,jdbcType=VARCHAR} '%')
    </if>
  </where>
  </select>
  <select id="getAdvisingByMapPageSearchOrdered" parameterType="java.util.Map" resultType="com.harambase.pioneer.pojo.view.AdviseView">
    select * from AdviseView <where> 1 = 1
    <if test="studentid != null">
      and studentid = #{studentid,jdbcType=VARCHAR}
    </if>
    <if test="facultyid != null">
      and facultyid = #{facultyid,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and (studentid like '%' #{search,jdbcType=VARCHAR} '%' or
      facultyid like '%' #{search,jdbcType=VARCHAR} '%' or
      sname like  '%' #{search,jdbcType=VARCHAR} '%' or
      operator like  '%' #{search,jdbcType=VARCHAR} '%' or
      fname like  '%' #{search,jdbcType=VARCHAR} '%')
    </if></where>
    order by ${orderColumn} ${order}
    limit #{currentIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>


</mapper>