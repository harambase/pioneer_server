<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.harambase.pioneer.dao.mybatis.mapper.TranscriptMapper" >
  <resultMap id="BaseResultMap" type="com.harambase.pioneer.pojo.base.Transcript" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentId" property="studentId" jdbcType="VARCHAR" />
    <result column="crn" property="crn" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="complete" property="complete" jdbcType="VARCHAR" />
    <result column="assignTime" property="assignTime" jdbcType="VARCHAR" />
    <result column="operator_id" property="operator_id" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, studentId, crn, grade, complete, assignTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Transcript
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.Map" >
    delete from Transcript
    where studentId = #{studentId,jdbcType=VARCHAR} and crn = #{crn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByCRN" parameterType="java.lang.String" >
    delete from Transcript where crn = #{crn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByStudentid" parameterType="java.lang.String">
    delete from Transcript where studentId = #{arg0,jdbcType=VARCHAR}
  </delete>


  <insert id="insert" parameterType="com.harambase.pioneer.pojo.base.Transcript" >
    insert into Transcript (id, studentId, crn,
      grade, complete, assignTime, operator_id
      )
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{crn,jdbcType=VARCHAR},
      #{grade,jdbcType=VARCHAR}, #{complete,jdbcType=VARCHAR}, #{assignTime,jdbcType=VARCHAR},#{operator_id,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.harambase.pioneer.pojo.base.Transcript" >
    insert into Transcript
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentId != null" >
        studentId,
      </if>
      <if test="crn != null" >
        crn,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="complete != null" >
        complete,
      </if>
      <if test="assignTime != null" >
        assignTime,
      </if>
      <if test="operator_id != null" >
        operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="crn != null" >
        #{crn,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="complete != null" >
        #{complete,jdbcType=VARCHAR},
      </if>
      <if test="assignTime != null" >
        #{assignTime,jdbcType=VARCHAR},
      </if>
      <if test="operator_id != null" >
        #{operator_id,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.harambase.pioneer.pojo.base.Transcript" >
    update Transcript
    <set >
      <if test="studentId != null" >
        studentId = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="crn != null" >
        crn = #{crn,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="complete != null" >
        complete = #{complete,jdbcType=VARCHAR},
      </if>
      <if test="assignTime != null" >
        assignTime = #{assignTime,jdbcType=VARCHAR},
      </if>
      <if test="operator_id != null" >
        operator_id = #{operator_id,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.harambase.pioneer.pojo.base.Transcript" >
    update Transcript
    set grade = #{grade,jdbcType=VARCHAR},
      complete = #{complete,jdbcType=VARCHAR},
      assignTime = #{assignTime,jdbcType=VARCHAR},
      operator_id = #{operator_id,jdbcType=VARCHAR}
    where studentId = #{studentId,jdbcType=VARCHAR} and crn = #{crn,jdbcType=VARCHAR}
  </update>
  <select id="getTranscriptCountByMapPageSearchOrdered" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) as count from TranscriptView <where> 1 = 1
    <if test="studentId != null">
      and studentId = #{studentId,jdbcType=VARCHAR}
    </if>
    <if test="crn != null">
      and crn = #{crn,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and (studentId like '%' #{search,jdbcType=VARCHAR} '%' or
           crn like '%' #{search,jdbcType=VARCHAR} '%' or
           grade like  '%' #{search,jdbcType=VARCHAR} '%' or
           complete like  '%' #{search,jdbcType=VARCHAR} '%' or
           assignTime like  '%' #{search,jdbcType=VARCHAR} '%' or
           slast like  '%' #{search,jdbcType=VARCHAR} '%' or
           sfirst like  '%' #{search,jdbcType=VARCHAR} '%' or
           operator_id like  '%' #{operator_id,jdbcType=VARCHAR} '%' or
           ownerId like  '%' #{search,jdbcType=VARCHAR} '%')
    </if>
  </where>
  </select>
  <select id="getTranscriptByMapPageSearchOrdered" parameterType="java.util.Map" resultType="com.harambase.pioneer.pojo.view.TranscriptView">
    select * from TranscriptView <where> 1 = 1
    <if test="studentId != null">
      and studentId = #{studentId,jdbcType=VARCHAR}
    </if>
    <if test="crn != null">
      and crn = #{crn,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and (studentId like '%' #{search,jdbcType=VARCHAR} '%' or
      crn like '%' #{search,jdbcType=VARCHAR} '%' or
      grade like  '%' #{search,jdbcType=VARCHAR} '%' or
      complete like  '%' #{search,jdbcType=VARCHAR} '%' or
      assignTime like  '%' #{search,jdbcType=VARCHAR} '%' or
      slast like  '%' #{search,jdbcType=VARCHAR} '%' or
      sfirst like  '%' #{search,jdbcType=VARCHAR} '%' or
      operator_id like  '%' #{operator_id,jdbcType=VARCHAR} '%' or
      ownerId like  '%' #{search,jdbcType=VARCHAR} '%')
    </if></where>
    order by ${orderColumn} ${order}
    limit #{currentIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>

  <select id="getStudentCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) as count from Transcript where crn = #{crn,jdbcType=VARCHAR}
  </select>

  <select id="count" parameterType="com.harambase.pioneer.pojo.base.Transcript" resultType="java.lang.Integer">
    select count(*) as count from Transcript where crn = #{crn,jdbcType=VARCHAR} and studentId = #{studentId,jdbcType=VARCHAR} and complete = #{complete, jdbcType=VARCHAR}
  </select>

  <select id="studentCourse" parameterType="java.lang.String" resultType="com.harambase.pioneer.pojo.base.Course">
    SELECT * FROM Course c WHERE c.crn IN (SELECT t.crn FROM Transcript t WHERE t.studentId = #{arg0,jdbcType=VARCHAR})
  </select>

  <select id="studentTranscripts" parameterType="java.lang.String" resultType="com.harambase.pioneer.pojo.view.TranscriptView">
    SELECT * FROM TranscriptView WHERE studentId = #{arg0, jdbcType=VARCHAR}
  </select>

  <select id="courseTranscripts" parameterType="java.lang.String" resultType="com.harambase.pioneer.pojo.view.TranscriptView">
    SELECT * FROM TranscriptView WHERE crn = #{arg0, jdbcType=VARCHAR}
  </select>

  <select id="getAllTranscripts" resultMap="BaseResultMap">
    select * from Transcript
  </select>

  <select id="getTranscriptBySearch" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from Transcript <where>
    <if test="search != null" >
      and ( studentId like '%' #{search,jdbcType=VARCHAR} '%' or
            crn like '%' #{search,jdbcType=VARCHAR} '%' or
            cname like '%'  #{search,jdbcType=VARCHAR} '%' or
            faculyid like '%'  #{search,jdbcType=VARCHAR} '%')
    </if></where>
  </select>

</mapper>