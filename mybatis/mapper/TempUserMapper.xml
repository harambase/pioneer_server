<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.harambase.pioneer.dao.mybatis.mapper.TempUserMapper" >
  <resultMap id="BaseResultMap" type="com.harambase.pioneer.pojo.base.TempUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
    <result column="updateTime" property="updateTime" jdbcType="VARCHAR" />
    <result column="operatorId" property="operatorId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.harambase.pioneer.pojo.base.TempUser" extends="BaseResultMap" >
    <result column="user_json" property="userJson" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, userId, status, createTime, updateTime, operatorId
  </sql>
  <sql id="Blob_Column_List" >
    user_json
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from TempUser
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from TempUser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.harambase.pioneer.pojo.base.TempUser" >
    insert into TempUser (id, userId, status,
      createTime, updateTime, operatorId,
      user_json)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR},
      #{userJson,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.harambase.pioneer.pojo.base.TempUser" >
    insert into TempUser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="operatorId != null" >
        operatorId,
      </if>
      <if test="userJson != null" >
        user_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="userJson != null" >
        #{userJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.harambase.pioneer.pojo.base.TempUser" >
    update TempUser
    <set >
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operatorId = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="userJson != null" >
        user_json = #{userJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.harambase.pioneer.pojo.base.TempUser" >
    update TempUser
    set userId = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR},
      operatorId = #{operatorId,jdbcType=VARCHAR},
      user_json = #{userJson,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.harambase.pioneer.pojo.base.TempUser" >
    update TempUser
    set userId = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR},
      operatorId = #{operatorId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getTempUserCountByMapPageSearchOrdered" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) as count from TempUser <where> 1 = 1
    <if test="status != null">
      and status = #{status,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and userId like '%' #{search,jdbcType=VARCHAR} '%'
    </if>
  </where>
  </select>
  <select id="getTempUserByMapPageSearchOrdered" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
    select * from TempUser <where> 1 = 1
    <if test="status != null">
      and status = #{status,jdbcType=VARCHAR}
    </if>
    <if test="search != null">
      and userId like '%' #{search,jdbcType=VARCHAR} '%'
    </if>
  </where>
    order by ${orderColumn} ${order}
    limit #{currentIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>
</mapper>
